{"version":3,"file":"index.modern.js","sources":["../index.js"],"sourcesContent":["const axios = require(\"axios\");\n\nconst getSingleStockInfo = (stock) =>\n  new Promise((resolve, reject) => {\n    if (!stock) {\n      return reject(Error(\"Stock symbol required\"));\n    }\n    if (typeof stock !== \"string\") {\n      return reject(\n        Error(`Invalid argument type. Required: string. Found: ${typeof stock}`)\n      );\n    }\n\n    const url = `https://query1.finance.yahoo.com/v7/finance/quote?symbols=${stock}`;\n\n    return axios\n      .get(url, {\n        mode: \"no-cors\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n        credentials: \"same-origin\",\n      })\n      .then((res) => {\n        const { data } = res;\n        if (\n          !data ||\n          !data.quoteResponse ||\n          !data.quoteResponse.result ||\n          data.quoteResponse.result.length === 0\n        ) {\n          return reject(Error(`Error retrieving info for symbol ${stock}`));\n        }\n        return resolve(data.quoteResponse.result[0]);\n      })\n      .catch((err) => reject(err));\n  });\n\nconst getStocksInfo = (stockList) =>\n  new Promise((resolve, reject) => {\n    if (!stockList) {\n      return reject(Error(\"Stock symbol list required\"));\n    }\n    if (!Array.isArray(stockList)) {\n      return reject(Error(\"Invalid argument type. Array required.\"));\n    }\n\n    const list = [...stockList];\n    if (!list.length || list.length < 1) {\n      return Promise.resolve([]);\n    }\n\n    const promises = list.map(getSingleStockInfo);\n    return resolve(Promise.all(promises));\n  });\n\nmodule.exports = {\n  getSingleStockInfo,\n  getStocksInfo,\n};\n"],"names":["axios","require","getSingleStockInfo","stock","Promise","resolve","reject","Error","get","mode","headers","withCredentials","credentials","then","res","data","quoteResponse","result","length","catch","err","module","exports","getStocksInfo","stockList","Array","isArray","list","promises","map","all"],"mappings":"AAAA,MAAMA,EAAQC,QAAQ,SAEhBC,EAAsBC,GAC1B,IAAIC,QAAQ,CAACC,EAASC,IACfH,EAGgB,iBAAVA,EACFG,EACLC,MAAO,0DAAyDJ,IAM7DH,EACJQ,IAHU,6DAA4DL,IAG7D,CACRM,KAAM,UACNC,QAAS,CACP,8BAA+B,IAC/B,eAAgB,oBAElBC,iBAAiB,EACjBC,YAAa,gBAEdC,KAAMC,IACL,MAAMC,KAAEA,GAASD,EACjB,OACGC,GACAA,EAAKC,eACLD,EAAKC,cAAcC,QACiB,IAArCF,EAAKC,cAAcC,OAAOC,OAIrBb,EAAQU,EAAKC,cAAcC,OAAO,IAFhCX,EAAOC,MAAO,oCAAmCJ,QAI3DgB,MAAOC,GAAQd,EAAOc,IAhChBd,EAAOC,MAAM,2BAqD1Bc,OAAOC,QAAU,CACfpB,mBAAAA,EACAqB,cApBqBC,GACrB,IAAIpB,QAAQ,CAACC,EAASC,KACpB,IAAKkB,EACH,OAAOlB,EAAOC,MAAM,+BAEtB,IAAKkB,MAAMC,QAAQF,GACjB,OAAOlB,EAAOC,MAAM,2CAGtB,MAAMoB,EAAO,IAAIH,GACjB,IAAKG,EAAKT,QAAUS,EAAKT,OAAS,EAChC,OAAOd,QAAQC,QAAQ,IAGzB,MAAMuB,EAAWD,EAAKE,IAAI3B,GAC1B,OAAOG,EAAQD,QAAQ0B,IAAIF"}